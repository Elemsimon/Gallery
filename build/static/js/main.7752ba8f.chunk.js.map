{"version":3,"sources":["images/user.svg","images/login.svg","comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Home.js","comps/Login.js","App.js","index.js"],"names":["module","exports","Title","handleLogout","className","onClick","config","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","Home","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","Container","Row","Col","lg","md","sm","loginIcon","Form","Group","controlId","Control","required","placeholder","value","Button","variant","uiImg","App","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","signOut","signInWithEmailAndPassword","catch","code","message","createUserWithEmailAndPassword","ReactDOM","render","StrictMode","rel","href","integrity","crossorigin","document","getElementById"],"mappings":"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","file":"static/js/main.7752ba8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.0c039611.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.aac2a1a6.svg\";","import React from 'react';\n\nconst Title = ({handleLogout}) => {\n  return (\n    <div className=\"title\">\n      <nav>\n        <h1>FireGram</h1>\n        <button onClick={handleLogout}>Logout</button>\n      </nav>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app'\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBfBjMeoRPRXcbGgKvmG_Soj3eqXEwbz4U\",\n  authDomain: \"sim-firegram.firebaseapp.com\",\n  projectId: \"sim-firegram\",\n  storageBucket: \"sim-firegram.appspot.com\",\n  messagingSenderId: \"738870491957\",\n  appId: \"1:738870491957:web:912fb91dba3e87949d6a7c\"\n};\n\n// Initialize Firebase\nconst config = firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\n  export { projectStorage, projectFirestore, config, timestamp };\n  export default config;\n\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    \n    storageRef.put(file).on('state_changed', (snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n    }, (err) => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({ url, createdAt });\n      setUrl(url);\n    });\n  }, [file]);\n\n  return { progress, url, error };\n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}></motion.div>\n  );\n} \n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  const handleChange = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpg)');\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={handleChange} />\n        <span>+</span>\n      </label>\n      <div className=\"output\">\n        { error && <div className=\"error\">{ error }</div>}\n        { file && <div>{ file.name }</div> }\n        { file && <ProgressBar file={file} setFile={setFile} /> }\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n          documents.push({...doc.data(), id: doc.id});\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n  }, [collection]);\n\n  return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n\n  return (\n    <div className=\"img-grid\">\n      {docs && docs.map(doc => (\n        <motion.div className=\"img-wrap\" key={doc.id} \n          layout\n          whileHover={{ opacity: 1 }}s\n          onClick={() => setSelectedImg(doc.url)}\n        >\n          <motion.img src={doc.url} alt=\"uploaded pic\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1 }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  )\n}\n\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  }\n\n  return (\n    <motion.div className=\"backdrop\" onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={selectedImg} alt=\"enlarged pic\" \n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  )\n}\n\nexport default Modal;","import React, { useState } from 'react';\n\nimport Title from './Title';\n\nimport UploadForm from './UploadForm';\nimport ImageGrid from './ImageGrid';\nimport Modal from './Modal';\n\n\nfunction Home({handleLogout}) {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div>\n        <div className=\"App\"> \n            <Title handleLogout={handleLogout}/>\n            <UploadForm />\n            <ImageGrid setSelectedImg={setSelectedImg} />\n            { selectedImg && (\n                <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n            )}\n        </div>\n    </div>\n    \n  )\n}\n\nexport default Home;","import React from 'react';\nimport loginIcon from '../images/user.svg'\nimport uiImg from '../images/login.svg';\n\nimport { Col, Container, Row, Button, Form } from 'react-bootstrap';\n\n\nconst Login = (props) => {\n    const{\n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignup,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError\n    } = props;\n    return (\n        <div>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col lg={4} md={6} sm={12} className=\"text-center mt-5 p-3\">\n                        <img className=\"icon-img\" src={loginIcon} alt=\"icon\"/>\n                        <Form>\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                <Form.Control type=\"email\" required placeholder=\"Enter email\" value={email} onChange = {(e) => setEmail(e.target.value)} />\n                                <p className=\"errorMsg\">{emailError}</p>\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" required placeholder=\"Password\" value={password} onChange = {(e) => setPassword(e.target.value)}  />\n                                <p className=\"errorMsg\">{passwordError}</p>\n                            </Form.Group>\n                            <div className=\"btnContainer\">\n                                {hasAccount ? (\n                                    <>\n                                        <Button className=\"log\" variant=\"primary btn-block\" onClick = {handleLogin}> Sign in </Button>\n                                        <p>\n                                            Don't have an account? \n                                            <span onClick={() => setHasAccount(!hasAccount)}>\n                                                Sign up\n                                            </span>\n                                        </p>\n                                    </>\n                                ): (\n                                    <>\n                                        <Button className=\"out\" variant=\"primary btn-block\" onClick = {handleSignup}> Sign up </Button>\n                                        <p>\n                                            Don't have an account? \n                                            <span onClick={() => setHasAccount(!hasAccount)}>\n                                                Sign in\n                                            </span>\n                                        </p>\n                                    </>\n                                ) }\n\n                            </div>\n\n                            {/* <Button variant=\"primary btn-block\" type=\"submit\">Login</Button> */}\n\n                           {/*  <div className=\"text-left mt-3\">\n                                <a href=\"#\"><small className=\"reset\">Password Reset</small></a>\n                            </div> */}\n                        </Form>\n                    </Col>\n\n                    <Col lg={8} md={6} sm={12}>\n                        <img className=\"w-100\" src={uiImg} alt=\"\"/>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport Home from './comps/Home';\nimport Login from './comps/Login';\nimport Title from './comps/Title';\nimport config from './firebase/config';\n\n\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    config\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    config\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .catch((err) => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () =>{\n    config.auth().signOut();\n  };\n\n  const authListener = () => {\n    config.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else{\n        setUser(\"\");\n      }\n    });\n  };\n  useEffect(() => {\n    authListener();\n  }, []);\n  return (\n    <div className=\"App\">\n      {user ? (\n        <Home handleLogout={handleLogout} />\n      ):(\n        <Login \n        email = {email}\n        setEmail = {setEmail}\n        password = {password}\n        setPassword = {setPassword}\n        handleLogin = {handleLogin}\n        handleSignup = {handleSignup}\n        hasAccount = {hasAccount}\n        setHasAccount = {setHasAccount}\n        emailError = {emailError}\n        passwordError = {passwordError}\n      />\n      )};\n      \n    \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n      crossorigin=\"anonymous\"\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}